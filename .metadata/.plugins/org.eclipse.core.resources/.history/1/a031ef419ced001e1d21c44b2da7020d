package com.practice;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

class Interval {
	int start;
	int end;

	public Interval(int start, int end) {
		super();
		this.start = start;
		this.end = end;
	}

}

public class mergeInterval {

	public static void main(String[] args) {

		ArrayList<Interval> al = new ArrayList<Interval>();
		for (Interval interval : al) {
			al.add(new Interval(1, 3));
			al.add(new Interval(2, 6));
			al.add(new Interval(8, 10));
			al.add(new Interval(15, 18));
		}

		List<Interval> mergedArray = merge(al);
	}

	private static List<Interval> merge(ArrayList<Interval> intervals) {
		if (intervals.size() <= 1) {
			return intervals;
		}
		intervals.sort(Comparator.comparingInt(interval -> interval.start));
		List<Interval> MergeList = new ArrayList<Interval>();

		Interval current = intervals.get(0);
		for (int i = 0; i < intervals.size(); i++) {
			Interval next = intervals.get(i);
			
			if(current.end >= next.end) {
				current.end = Math.max(current.start, next.start);
			}
			MergeList.add(current);
			current=next;

		}

		MergeList.add(current);
		return MergeList;
	}

}
